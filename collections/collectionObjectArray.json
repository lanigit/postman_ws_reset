[{"collection":{"info":{"_postman_id":"7a0ca4f4-c513-4645-b663-f5f8e0acb744","name":"Workspace Reset Tool","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","updatedAt":"2023-02-09T15:46:20.000Z"},"item":[{"name":"Initialize Workspace Data","item":[{"name":"Get Workspace & Set Values","event":[{"listen":"test","script":{"id":"684a7ffb-2a6d-4b0a-b57f-b00dad906ed2","exec":["const { workspace } = pm.response.json();","// console.log(workspace);","const { apis, collections, environments, mocks, monitors } = workspace;","console.log(apis, collections, environments, mocks, monitors);","","// SET API ARRAY ","let apiArray = [];","apis.forEach(el => {","    apiArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('apiArray', JSON.stringify(apiArray));","// console.log(\"API UIDs: \" + pm.collectionVariables.get('apiArray'));","","// SET COLLECTIONS ARRAY","let collArray = [];","collections.forEach(el => {","    collArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('collectionArray', JSON.stringify(collArray));","// console.log(\"Collections UIDs: \" + pm.collectionVariables.get('collectionArray'));","","// SET ENVIRONMENTS ARRAY","let envArray = [];","environments.forEach(el => {","    envArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('environmentArray', JSON.stringify(envArray));","// console.log(\"Environment UIDs: \" + pm.collectionVariables.get('environmentArray'));","","// SET MOCK ARRAY","let mockArray = [];","mocks.forEach(el => {","    mockArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('mockArray', JSON.stringify(mockArray));","// console.log(\"Mock UIDs: \" + pm.collectionVariables.get('mockArray'));","","// SET MONITOR ARRAY","let monArray = [];","monitors.forEach(el => {","    monArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('monitorArray', JSON.stringify(monArray));","// console.log(\"Monitor UIDs: \" + pm.collectionVariables.get('monitorArray'));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}}],"id":"bf7d2bb1-63fe-4319-aa80-f6a6a83d1d4e","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{reset_key}}","type":"string"},{"key":"key","value":"x-api-key","type":"string"}]},"method":"GET","header":[{"key":"Access-Control-Allow-Origin","value":"https://api.getpostman.com","type":"text"}],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceUid}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceUid}}"]}},"response":[]}],"id":"e819a720-38cb-4157-922b-2283d492f7e9"},{"name":"Format Data & Send to Repo","item":[{"name":"Send APIs to Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":["let parsedApiArray = JSON.parse(pm.collectionVariables.get('apiArray'));","let apiObjectArray = [];","","for(let api in parsedApiArray){","    // console.log(parsedApiArray[api])","    const apiRequest = {","        url: 'https://api.getpostman.com/apis/' + parsedApiArray[api],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(apiRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/ APIs:\\n ${error}`);","        } else {","            apiObjectArray.push(response.json());","        }","        pm.globals.set('apiObjectArray', btoa(JSON.stringify(apiObjectArray))); ","    });","}",""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"306dc969-25aa-4109-91bb-f37459ad6ddc","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"apis/apiObjectArray.json\",\n  \"message\": \"New commit to APIs at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{apiObjectArray}}\",\n  \"sha\": \"{{targetApiSha}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/apis/apiObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","apis","apiObjectArray.json"]}},"response":[]},{"name":"Send Collections to Repo","event":[{"listen":"prerequest","script":{"id":"40c9953f-ab90-460e-a38e-4519f0ed2854","exec":["let parsedCollectionArray = JSON.parse(pm.collectionVariables.get('collectionArray'));","let collectionObjectArray = [];","","for(collection in parsedCollectionArray){","    // console.log(parsedCollectionArray[collection])","    const collectionRequest = {","        url: 'https://api.getpostman.com/collections/' + parsedCollectionArray[collection],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(collectionRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/Collections:\\n ${error}`);","        } else {","            collectionObjectArray.push(response.json());","        }","        pm.globals.set('collectionObjectArray', btoa(JSON.stringify(collectionObjectArray)));","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"0506e142-c80a-4555-8b2e-12dde223ca04","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}}],"id":"105f2560-10de-4837-8212-13fa01984357","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"collections/collectionObjectArray.json\",\n  \"message\": \"New commit to Collections at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{collectionObjectArray}}\",\n  \"sha\": \"{{targetCollSha}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/collections/collectionObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","collections","collectionObjectArray.json"]}},"response":[]},{"name":"Send Environments to Repo","event":[{"listen":"prerequest","script":{"id":"7ab5a769-b588-439b-95ed-3eabb391a123","exec":["let parsedEnvironmentArray = JSON.parse(pm.collectionVariables.get('environmentArray'));","let environmentObjectArray = [];","","for(environment in parsedEnvironmentArray){","    // console.log(parsedEnvironmemtArray[environment]);","    const environmentRequest = {","        url: 'https://api.getpostman.com/environments/' + parsedEnvironmentArray[environment],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    };","    pm.sendRequest(environmentRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/Environments:\\n ${error}`);","        } else {","            environmentObjectArray.push(response.json());","        }","        pm.globals.set('environmentObjectArray', btoa(JSON.stringify(environmentObjectArray)));","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"89f2bd9b-0d11-435f-9421-ce9744c4e07c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"a89fc3e5-8ef1-4e54-8aba-e1db7cfd92b3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"environments/environmentObjectArray.json\",\n  \"message\": \"New commit to Environments at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{environmentObjectArray}}\",\n  \"sha\": \"{{targetEnvSha}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/environments/environmentObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","environments","environmentObjectArray.json"]}},"response":[]},{"name":"Send Mocks to Repo","event":[{"listen":"prerequest","script":{"id":"cf26cbb8-0214-4f80-94c5-56c18d6dfdbc","exec":["let parsedMockArray = JSON.parse(pm.collectionVariables.get('mockArray'));","let mockObjectArray = [];","","for(mock in parsedMockArray){","    // console.log(parsedMockArray[mock]);","    const mockRequest = {","        url: \"https://api.getpostman.com/mocks/\" + parsedMockArray[mock],","        method: \"GET\",","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    };","    pm.sendRequest(mockRequest, (error, response) => {","        if(error){","            console.log(`Something went wrongb w/ Mocks:\\n ${error}`);","        } else {","            mockObjectArray.push(response.json());","        }","        pm.globals.set('mockObjectArray', btoa(JSON.stringify(mockObjectArray)));","    });","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"c389bd9b-acd5-4dd4-9f20-5995dad3cc75","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"cfd87d15-01aa-4a20-8ba9-0759c9e9ece7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"mocks/mockObjectArray.json\",\n  \"message\": \"New commit to Mocks at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{mockObjectArray}}\",\n  \"sha\": \"{{targetMockSha}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/mocks/mockObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","mocks","mockObjectArray.json"]}},"response":[]},{"name":"Send Monitors to Repo","event":[{"listen":"prerequest","script":{"id":"5566d2a5-3281-4a17-96b0-29e5290b7303","exec":["let parsedMonitorArray = JSON.parse(pm.collectionVariables.get('monitorArray'));","let monitorObjectArray = [];","","for(monitor in parsedMonitorArray){","    // console.log(monitorArray[monitor]);","    const monitorRequest = {","        url: \"https://api.getpostman.com/monitors/\" + parsedMonitorArray[monitor],","        method: \"GET\",","        header: {","            \"Content-Type\": \"application/json\",","            \"x-api-key\": pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(monitorRequest, (error, response) => {","        if(error){","            console.log(`Something went wrong w/Monitors:\\n ${error}`);","        } else {","            monitorObjectArray.push(response.json());","        }","        pm.globals.set('monitorObjectArray', btoa(JSON.stringify(monitorObjectArray)));","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b54dfa6b-d587-4ecd-9748-831f383e7bd7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"221516dd-0d15-46d6-a045-a480472192c6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"monitors/monitorObjectArray.json\",\n  \"message\": \"New commit to Monitors at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{monitorObjectArray}}\",\n  \"sha\": \"{{targetMonSha}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/monitors/monitorObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","monitors","monitorObjectArray.json"]}},"response":[]}],"id":"36c3db83-455a-4e25-a9a9-8b315585f920","event":[{"listen":"prerequest","script":{"id":"a91000a0-d327-4910-a14a-ddc1b2af015f","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"ad0bada2-1fcf-494c-b3c9-22e8088757bf","type":"text/javascript","exec":[""]}}]},{"name":"Get Repo Resources","item":[{"name":"Get APIs from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["let res = pm.response.json();","pm.collectionVariables.set('targetApiSha', res.sha);","","pm.collectionVariables.set('decodedApiContent', atob(res.content));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"76ddb449-af19-41d7-8bf0-dd33aa6347db","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/apis/apiObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","apis","apiObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]},{"name":"Get Collections from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["let res = pm.response.json();","pm.collectionVariables.set('targetCollSha', res.sha);","","","pm.collectionVariables.set('decodedCollContent', atob(res.content));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"b7bf1af7-a028-4a8e-a4ed-138b89bd045b","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/collections/collectionObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","collections","collectionObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]},{"name":"Get Environments from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["let res = pm.response.json();","pm.collectionVariables.set('targetEnvSha', res.sha);","","pm.collectionVariables.set('decodedEnvContent', atob(res.content));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"adebb869-b621-4e89-bcf1-fab72da18dc5","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/environments/environmentObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","environments","environmentObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]},{"name":"Get Mocks from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["let res = pm.response.json();","pm.collectionVariables.set('targetMockSha', res.sha);","","pm.collectionVariables.set('decodedMockContent', atob(res.content));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"8594044b-43e9-4906-b234-d2500f5201f0","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/mocks/mockObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","mocks","mockObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]},{"name":"Get Monitors from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["let res = pm.response.json();","pm.collectionVariables.set('targetMonSha', res.sha);","","pm.collectionVariables.set('decodedMonContent', atob(res.content));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"97d5037f-e35e-4c6c-b0e1-7607ee697eda","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/monitors/monitorObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","monitors","monitorObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]}],"id":"14c20658-57aa-471f-a4e6-2fd4f96a5fdd"},{"name":"Run Diff on Resources","item":[{"name":"Get Target Workspace & Destructure","event":[{"listen":"test","script":{"id":"684a7ffb-2a6d-4b0a-b57f-b00dad906ed2","exec":["const { workspace } = pm.response.json();","// console.log(workspace);","const { apis, collections, environments, mocks, monitors } = workspace;","console.log(apis, collections, environments, mocks, monitors);","","// SET API ARRAY ","let targetApiArray = [];","apis.forEach(el => {","    targetApiArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('targetApiArray', JSON.stringify(targetApiArray));","// console.log(\"API UIDs: \" + pm.collectionVariables.get('apiArray'));","","// SET COLLECTIONS ARRAY","let targetCollArray = [];","collections.forEach(el => {","    targetCollArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('targetCollArray', JSON.stringify(targetCollArray));","// console.log(\"Collections UIDs: \" + pm.collectionVariables.get('collectionArray'));","","// SET ENVIRONMENTS ARRAY","let targetEnvArray = [];","environments.forEach(el => {","    targetEnvArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('targetEnvArray', JSON.stringify(targetEnvArray));","// console.log(\"Environment UIDs: \" + pm.collectionVariables.get('environmentArray'));","","// SET MOCK ARRAY","let targetMockArray = [];","mocks.forEach(el => {","    targetMockArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('targetMockArray', JSON.stringify(targetMockArray));","// console.log(\"Mock UIDs: \" + pm.collectionVariables.get('mockArray'));","","// SET MONITOR ARRAY","let targetMonArray = [];","monitors.forEach(el => {","    targetMonArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('targetMonArray', JSON.stringify(targetMonArray));","// console.log(\"Monitor UIDs: \" + pm.collectionVariables.get('monitorArray'));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}}],"id":"2df19e90-288f-47cc-8697-eba7b9988358","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{reset_key}}","type":"string"},{"key":"key","value":"x-api-key","type":"string"}]},"method":"GET","header":[{"key":"Access-Control-Allow-Origin","value":"https://api.getpostman.com","type":"text"}],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceUid}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceUid}}"]}},"response":[]}],"id":"79ed3d46-8d7d-415f-8eaa-6f1ebe72154e"},{"name":"Reset Workspace Data","item":[],"id":"c4df58ef-6bc7-4c6a-825b-067dc0b20242"},{"name":"GitHub General","item":[{"name":"Get All GitHub Repos","id":"5b8749fb-a1d0-46ba-b8f4-473bbd405306","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://api.github.com/users/lanigit/repos","protocol":"https","host":["api","github","com"],"path":["users","lanigit","repos"]}},"response":[]},{"name":"Get Reset Tool Repo","id":"d60bddd9-231e-490c-ad67-a78eb655f8bb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]}],"id":"e86cb355-c266-4d14-b534-e464cd1199a7"}],"auth":{"type":"oauth2","oauth2":[{"key":"accessTokenUrl","value":"https://github.com/login/oauth/access_token","type":"string"},{"key":"scope","value":"repo workflow","type":"string"},{"key":"clientSecret","value":"{{ghClientSecret}}","type":"string"},{"key":"clientId","value":"{{ghClientId}}","type":"string"},{"key":"authUrl","value":"https://github.com/login/oauth/authorize","type":"string"},{"key":"tokenName","value":"Reset Tool Token","type":"string"},{"key":"addTokenTo","value":"header","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"544a6c8a-097c-4d3b-93a3-bbf598da9e50","type":"text/javascript","exec":["let moment = require('moment');","let currTime = moment().format('MMMM Do YYYY, h:mm:ss a') + \" \" + \"(\"+ moment.locale() + \")\";","pm.collectionVariables.set('currTime', currTime);"]}},{"listen":"test","script":{"id":"6ac0a9b6-c317-4185-bec2-1529eb3e3691","type":"text/javascript","exec":[""]}}],"variable":[{"id":"635f7cb6-ba3d-45f1-a5ca-87f9f0438fc6","key":"currTime","value":""},{"id":"9cac28d2-d2f6-4b1c-a33e-fc322b15f836","key":"apiArray","value":""},{"id":"d3455241-ba25-4b83-ba9f-a6df44f4d387","key":"collectionArray","value":""},{"id":"0f01dec0-71b2-4c11-a4ad-6a8d1810d997","key":"environmentArray","value":""},{"id":"70d5ff1a-64ef-412c-944e-9b9d266b4079","key":"mockArray","value":""},{"id":"ae59a1e3-49af-4e8c-ad17-1dea609b6474","key":"monitorArray","value":""},{"id":"eab13e28-0cd4-408c-a2bc-9132b922a742","key":"targetApiSha","value":""},{"id":"c6c0c955-a359-4d24-b13a-b8f98028b401","key":"targetCollSha","value":""},{"id":"74b19618-8339-49ca-b14b-a59dbe9132a3","key":"targetEnvSha","value":""},{"id":"ebe3d84d-2327-4d42-9202-765bcffc1943","key":"targetMockSha","value":""},{"id":"b5724039-727c-4498-b01a-6ea82a28a815","key":"targetMonSha","value":""},{"id":"237e04a6-d276-4375-a999-c52db1e6893c","key":"decodedApiContent","value":""},{"id":"ce0cd5d5-9499-42e2-85da-a91fb8471c85","key":"decodedCollContent","value":""},{"id":"ddaedbcb-5333-4f07-bb60-db584379fc56","key":"decodedEnvContent","value":""},{"id":"d99eed63-63ed-419f-addd-6362dd3514fd","key":"decodedMockContent","value":""},{"id":"796bfa65-4ec7-4ef2-b5d9-937253bb33d8","key":"decodedMonContent","value":""}]}}]