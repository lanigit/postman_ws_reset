[{"collection":{"info":{"_postman_id":"7a0ca4f4-c513-4645-b663-f5f8e0acb744","name":"1) Reset Tool","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","updatedAt":"2023-02-01T18:50:10.000Z"},"item":[{"name":"Format Data & Send to Repo","item":[{"name":"Workspace & Destructure","event":[{"listen":"test","script":{"id":"684a7ffb-2a6d-4b0a-b57f-b00dad906ed2","exec":["const { workspace } = pm.response.json();","// console.log(workspace);","const { apis, collections, environments, mocks, monitors } = workspace;","console.log(apis, collections, environments, mocks, monitors);","","// SET API ARRAY ","let apiArray = [];","apis.forEach(el => {","    apiArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('apiArray', JSON.stringify(apiArray));","// console.log(\"API UIDs: \" + pm.collectionVariables.get('apiArray'));","","// SET COLLECTIONS ARRAY","let collArray = [];","collections.forEach(el => {","    collArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('collectionArray', JSON.stringify(collArray));","// console.log(\"Collections UIDs: \" + pm.collectionVariables.get('collectionArray'));","","// SET ENVIRONMENTS ARRAY","let envArray = [];","environments.forEach(el => {","    envArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('environmentArray', JSON.stringify(envArray));","// console.log(\"Environment UIDs: \" + pm.collectionVariables.get('environmentArray'));","","// SET MOCK ARRAY","let mockArray = [];","mocks.forEach(el => {","    mockArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('mockArray', JSON.stringify(mockArray));","// console.log(\"Mock UIDs: \" + pm.collectionVariables.get('mockArray'));","","// SET MONITOR ARRAY","let monArray = [];","monitors.forEach(el => {","    monArray.push(el[\"uid\"]);","});","","pm.collectionVariables.set('monitorArray', JSON.stringify(monArray));","// console.log(\"Monitor UIDs: \" + pm.collectionVariables.get('monitorArray'));","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}}],"id":"bf7d2bb1-63fe-4319-aa80-f6a6a83d1d4e","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{}},"request":{"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{reset_key}}","type":"string"},{"key":"key","value":"x-api-key","type":"string"}]},"method":"GET","header":[{"key":"Access-Control-Allow-Origin","value":"https://api.getpostman.com","type":"text"}],"url":{"raw":"https://api.getpostman.com/workspaces/{{workspaceUid}}","protocol":"https","host":["api","getpostman","com"],"path":["workspaces","{{workspaceUid}}"]}},"response":[]},{"name":"Send APIs to Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":["let parsedApiArray = JSON.parse(pm.collectionVariables.get('apiArray'));","let apiObjectArray = [];","let moment = require('moment');","let currTime = moment().format('LTS') + \" \" + \"(\"+ moment.locale() + \")\";","pm.collectionVariables.set('currTime', currTime);","","for(let api in parsedApiArray){","    // console.log(parsedApiArray[api])","    const apiRequest = {","        url: 'https://api.getpostman.com/apis/' + parsedApiArray[api],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(apiRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/ APIs:\\n ${error}`);","        } else {","            apiObjectArray.push(response.json());","        }","        pm.globals.set('apiObjectArray', btoa(JSON.stringify(apiObjectArray))); ","    });","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"306dc969-25aa-4109-91bb-f37459ad6ddc","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"PUT","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"apis/apiObjectArray.json\",\n  \"message\": \"New commit at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{apiObjectArray}}\",\n  \"sha\": \"065e39aa68c65398514a1d6b42697014c8be2c6f\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/apis/apiObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","apis","apiObjectArray.json"]}},"response":[]},{"name":"Send Collections to Repo","event":[{"listen":"prerequest","script":{"id":"40c9953f-ab90-460e-a38e-4519f0ed2854","exec":["let parsedCollectionArray = JSON.parse(pm.collectionVariables.get('collectionArray'));","let collectionObjectArray = [];","","for(collection in parsedCollectionArray){","    // console.log(parsedCollectionArray[collection])","    const collectionRequest = {","        url: 'https://api.getpostman.com/collections/' + parsedCollectionArray[collection],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(collectionRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/Collections:\\n ${error}`);","        } else {","            collectionObjectArray.push(response.json());","        }","        pm.globals.set('collectionObjectArray', btoa(JSON.stringify(collectionObjectArray)));","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"0506e142-c80a-4555-8b2e-12dde223ca04","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});",""],"type":"text/javascript"}}],"id":"105f2560-10de-4837-8212-13fa01984357","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n  \"owner\": \"lanigit\",\n  \"repo\": \"postman_ws_reset\",\n  \"path\": \"collections/collectionObjectArray.json\",\n  \"message\": \"New commit at: {{currTime}}\",\n  \"branch\": \"dev\",\n  \"committer\": {\n    \"name\": \"Michael Lanius\",\n    \"email\": \"michael.lanius@postman.com\",\n    \"date\": \"{{currTime}}\"\n  },\n  \"content\": \"{{collectionObjectArray}}\",\n  \"sha\": \"fe2ad5caec41d4e69f3e5591e7f347ffe46128c6\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/collections/collectionObjectArray.json","host":["{{ghRepoUrl}}"],"path":["contents","collections","collectionObjectArray.json"]}},"response":[]},{"name":"Send Environments to Repo","event":[{"listen":"prerequest","script":{"id":"7ab5a769-b588-439b-95ed-3eabb391a123","exec":["let parsedEnvironmentArray = JSON.parse(pm.collectionVariables.get('environmentArray'));","let environmentObjectArray = [];","","for(environment in parsedEnvironmentArray){","    // console.log(parsedEnvironmemtArray[environment]);","    const environmentRequest = {","        url: 'https://api.getpostman.com/environments/' + parsedEnvironmentArray[environment],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    };","    pm.sendRequest(environmentRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/Environments:\\n ${error}`);","        } else {","            environmentObjectArray.push(response.json());","        }","        pm.globals.set('environmentObjectArray', JSON.stringify(environmentObjectArray));","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"89f2bd9b-0d11-435f-9421-ce9744c4e07c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"a89fc3e5-8ef1-4e54-8aba-e1db7cfd92b3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{environmentObjectArray}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]},{"name":"Send Mocks to Repo","event":[{"listen":"prerequest","script":{"id":"cf26cbb8-0214-4f80-94c5-56c18d6dfdbc","exec":["let parsedMockArray = JSON.parse(pm.collectionVariables.get('mockArray'));","let mockObjectArray = [];","","for(mock in parsedMockArray){","    // console.log(parsedMockArray[mock]);","    const mockRequest = {","        url: \"https://api.getpostman.com/mocks/\" + parsedMockArray[mock],","        method: \"GET\",","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    };","    pm.sendRequest(mockRequest, (error, response) => {","        if(error){","            console.log(`Something went wrongb w/ Mocks:\\n ${error}`);","        } else {","            mockObjectArray.push(response.json());","        }","        pm.globals.set('mockObjectArray', JSON.stringify(mockObjectArray));","    });","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"c389bd9b-acd5-4dd4-9f20-5995dad3cc75","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"cfd87d15-01aa-4a20-8ba9-0759c9e9ece7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{mockObjectArray}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]},{"name":"Send Monitors to Repo","event":[{"listen":"prerequest","script":{"id":"5566d2a5-3281-4a17-96b0-29e5290b7303","exec":["let parsedMonitorArray = JSON.parse(pm.collectionVariables.get('monitorArray'));","let monitorObjectArray = [];","","for(monitor in parsedMonitorArray){","    // console.log(monitorArray[monitor]);","    const monitorRequest = {","        url: \"https://api.getpostman.com/monitors/\" + parsedMonitorArray[monitor],","        method: \"GET\",","        header: {","            \"Content-Type\": \"application/json\",","            \"x-api-key\": pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(monitorRequest, (error, response) => {","        if(error){","            console.log(`Something went wrong w/Monitors:\\n ${error}`);","        } else {","            monitorObjectArray.push(response.json());","        }","        pm.globals.set('monitorObjectArray', JSON.stringify(monitorObjectArray))","    })","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"b54dfa6b-d587-4ecd-9748-831f383e7bd7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});"],"type":"text/javascript"}}],"id":"221516dd-0d15-46d6-a045-a480472192c6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{{monitorObjectArray}}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]},{"name":"Get Collection Data and Validate","event":[{"listen":"prerequest","script":{"id":"1aca32a7-9dc4-40a3-be83-4f9de0665e78","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"92991185-eb16-4c21-9c8f-558e3b9ac1c7","exec":[""],"type":"text/javascript"}}],"id":"f84f41f9-3645-4aec-aad2-1f7136e3c621","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]}],"id":"36c3db83-455a-4e25-a9a9-8b315585f920","auth":{"type":"oauth2","oauth2":[{"key":"client_authentication","value":"header","type":"string"},{"key":"scope","value":"repo workflow","type":"string"},{"key":"clientSecret","value":"{{ghClientSecret}}","type":"string"},{"key":"clientId","value":"{{ghClientId}}","type":"string"},{"key":"accessTokenUrl","value":"https://github.com/login/oauth/access_token","type":"string"},{"key":"authUrl","value":"https://github.com/login/oauth/authorize","type":"string"},{"key":"tokenName","value":"Reset","type":"string"},{"key":"addTokenTo","value":"header","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"c52a4541-6fb7-4ef7-aa24-b0246da27e1a","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"1db458fb-5735-4e33-b031-853c304f301b","type":"text/javascript","exec":[""]}}]},{"name":"Get Stored Repo and Run Diff","item":[{"name":"Get All GitHub Repos","id":"5b8749fb-a1d0-46ba-b8f4-473bbd405306","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"oauth2","oauth2":[{"key":"scope","value":"repo","type":"string"},{"key":"clientSecret","value":"96ed9d00c3ab7e089e7ee5db4592ac6bbe123aeb","type":"string"},{"key":"clientId","value":"bf97932861bef5349fb6","type":"string"},{"key":"accessTokenUrl","value":"https://github.com/login/oauth/access_token","type":"string"},{"key":"authUrl","value":"https://github.com/login/oauth/authorize","type":"string"},{"key":"tokenName","value":"Reset Tool","type":"string"},{"key":"addTokenTo","value":"header","type":"string"}]},"method":"GET","header":[],"url":{"raw":"https://api.github.com/users/lanigit/repos","protocol":"https","host":["api","github","com"],"path":["users","lanigit","repos"]}},"response":[]},{"name":"Get Reset Tool Repo","id":"d60bddd9-231e-490c-ad67-a78eb655f8bb","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"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","type":"string"}]},"method":"GET","header":[],"url":{"raw":"{{ghRepoUrl}}","host":["{{ghRepoUrl}}"]}},"response":[]},{"name":"Get APIs from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":["let parsedApiArray = JSON.parse(pm.collectionVariables.get('apiArray'));","let apiObjectArray = [];","","for(let api in parsedApiArray){","    // console.log(parsedApiArray[api])","    const apiRequest = {","        url: 'https://api.getpostman.com/apis/' + parsedApiArray[api],","        method: 'GET',","        header: {","            'Content-Type': 'application/json',","            'x-api-key': pm.environment.get('reset_key')","        }","    }","    pm.sendRequest(apiRequest, (error, response) => {","        // console.log(error ? error : response.json());","        if(error){","            console.log(`Something went wrong w/ APIs:\\n ${error}`);","        } else {","            apiObjectArray.push(response.json());","        }","        pm.globals.set('apiObjectArray', btoa(JSON.stringify(apiObjectArray))); ","    });","}"],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"76ddb449-af19-41d7-8bf0-dd33aa6347db","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/apis/apiObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","apis","apiObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]},{"name":"Get Collections from Repo","event":[{"listen":"prerequest","script":{"id":"5389911a-1976-4df1-94a8-c4e0684fcf7a","exec":["// let parsedApiArray = JSON.parse(pm.collectionVariables.get('apiArray'));","// let apiObjectArray = [];","","// for(let api in parsedApiArray){","//     // console.log(parsedApiArray[api])","//     const apiRequest = {","//         url: 'https://api.getpostman.com/apis/' + parsedApiArray[api],","//         method: 'GET',","//         header: {","//             'Content-Type': 'application/json',","//             'x-api-key': pm.environment.get('reset_key')","//         }","//     }","//     pm.sendRequest(apiRequest, (error, response) => {","//         // console.log(error ? error : response.json());","//         if(error){","//             console.log(`Something went wrong w/ APIs:\\n ${error}`);","//         } else {","//             apiObjectArray.push(response.json());","//         }","//         pm.globals.set('apiObjectArray', btoa(JSON.stringify(apiObjectArray))); ","//     });","// }"],"type":"text/javascript"}},{"listen":"test","script":{"id":"3db0aaa3-1497-4196-99e4-d5a7b8cc146a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","pm.test(\"200 'OK' check\", function () {","    pm.response.to.have.status(\"OK\");","});","","// const octokit = new Octokit({ auth: pm.environment.get('gh_pat') });","","// octokit.request('PUT /repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json', {","//   owner: 'lanigit',","//   repo: 'postman_ws_reset',","//   path: '/repos/lanigit/postman_ws_reset/contents/apis/apiObjectArray.json',","//   message: 'my commit message',","//   committer: {","//     name: 'Michael Lanius',","//     email: 'michael.lanius+v10@postman.commit'","//   },","//   content: pm.globals.get('apiObjectArray')","// })","","// *** We can handle this using core Postman POST request ","// *** functionality with {{apiObjectArray}} (a global variable) as the payload in the body","","// const sendToRepo = {","//     url: 'https://webhook.site/2bcb543e-f59e-4817-91eb-deda4485071d',","//     method: 'POST',","//     header: {","//         'Content-Type': 'application/json',","//         'x-api-key': 'test_value'","//     },","//     body: {","//         mode: 'raw',","//         raw: pm.globals.get('apiObjectArray')","//     }","// }","// pm.sendRequest(sendToRepo, (error, response) => {","//     console.log(error ? error : response);","// });"],"type":"text/javascript"}}],"id":"b7bf1af7-a028-4a8e-a4ed-138b89bd045b","protocolProfileBehavior":{"disableBodyPruning":true,"disabledSystemHeaders":{"content-type":true}},"request":{"method":"GET","header":[{"key":"Content-Type","value":"application/vnd.github.raw","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{ghRepoUrl}}/contents/collections/collectionObjectArray.json?ref=dev","host":["{{ghRepoUrl}}"],"path":["contents","collections","collectionObjectArray.json"],"query":[{"key":"ref","value":"dev"}]}},"response":[]}],"id":"ae8ddae3-d082-45f9-9f92-834aaaeb312a"},{"name":"Reset Workspace Data","item":[],"id":"c4df58ef-6bc7-4c6a-825b-067dc0b20242"}],"event":[{"listen":"prerequest","script":{"id":"92ae2d5f-97c1-428f-931a-c5bbf9bdf319","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"ca0aa822-a679-4f6d-9d70-455ae72f769e","type":"text/javascript","exec":[""]}}],"variable":[{"id":"83cd60f2-59ea-4cca-881a-c0b9e57efaf6","key":"collectionArray","value":""},{"id":"58051217-eea5-4d24-bbbf-c0213f9e967c","key":"environmentArray","value":""},{"id":"9f5b572e-ad71-4705-b48e-98eb04e44c4d","key":"mockArray","value":""},{"id":"7976f795-1fd9-4717-ac07-39c951e7aa70","key":"monitorArray","value":""},{"id":"54950bdc-1524-4cd8-8619-d5abe88c6183","key":"apiArray","value":""},{"id":"7b28cfb9-3bf7-4853-9fc8-5397b7920132","key":"workspaceUid","value":"efcbd02b-edc0-4a4d-8fbc-3643f73bd8cd","type":"string"},{"id":"f875b018-9c5c-4c3a-a402-e611b23d03e1","key":"currTime","value":""}]}}]